---
- fail: msg="nfspath is not defined"
  when: nfspath == ''
- fail: msg="nfsdomain is not defined"
  when: nfsdomain == ''

- name: install nfs packages
  apt: update_cache=yes cache_valid_time=600 name=nfs-kernel-server,nfs-common state=latest

- name: stop nfs
  service: name=nfs-kernel-server state=stopped

- name: unmount existing volumes
  shell: umount {{ nfspath }}/{{ item }} || true
  with_items:
    - home
    - exchange
    - jupyter

- name: make sure home directory exists
  file: path=/mnt/nfs/home state=directory

- name: make sure exchange directory exists
  file: path=/mnt/nfs/exchange state=directory mode=0777

- name: make sure jupyter directory exists
  file: path=/mnt/nfs/jupyter state=directory mode=0777

- name: create root directory for NFS volume
  file: path={{ nfspath }} state=directory

- name: create sub directory for home volume
  file: path={{ nfspath }}/home state=directory

- name: create sub directory for exchange volume
  file: path={{ nfspath }}/exchange state=directory mode=0777

- name: create sub directory for jupyter volume
  file: path={{ nfspath }}/jupyter state=directory mode=0777

- name: bind home volume
  mount: src=/mnt/nfs/home name={{ nfspath }}/home fstype=none opts=bind state=mounted

- name: bind exchange volume
  mount: src=/mnt/nfs/exchange name={{ nfspath }}/exchange fstype=none opts=bind state=mounted

- name: bind jupyter volume
  mount: src=/mnt/nfs/jupyter name={{ nfspath }}/jupyter fstype=none opts=bind state=mounted

- name: modify ufw settings
  shell: "ufw allow from {{ hostvars[item]['servicenet_ip'] }}"
  with_items: "{{ groups['nfs_clients'] }}"

- name: modify /etc/hosts.allow
  lineinfile:
    dest: /etc/hosts.allow
    line: "PORTMAP: {{ hostvars[item]['servicenet_ip'] }}"
  with_items: "{{ groups['nfs_clients'] }}"

- name: install /etc/exports
  template: src=exports dest=/etc/exports mode=0644

- name: start nfs
  service: name=nfs-kernel-server state=started

- name: restart idmapd
  service: name=idmapd state=restarted
